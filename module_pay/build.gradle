if (!isNeedPayModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    defaultConfig {
        if (!isNeedPayModule.toBoolean()) {
            applicationId "com.palm.test"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.versionCode
        versionName "1.0"

        multiDexEnabled true
        renderscriptTargetApi rootProject.ext.targetSdkVersion //must match target sdk and build tools
        renderscriptSupportModeEnabled true
    }

    buildTypes {
        release {
            consumerProguardFile('proguard-rules.pro')
        }
    }
    sourceSets {
        debug{
            if (isNeedPayModule.toBoolean()) {
                setRoot 'src/main'
                kotlin.srcDirs=['main/java']
            }
        }
    }

    packagingOptions {
        exclude '**/commerceutils-svnlog.properties'
    }

    resourcePrefix "pay_"
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation project(":baselib")
    api "com.cs.bd.compatapi:cs:1.0.0"
    api('com.cs.bd.subscribe:subscribe-cs-release:1.8.3.184077', {//小号包
        exclude group: 'com.cs.bd.commerce', module: 'util'
        exclude group: 'com.cs.bd.subscribe', module: 'official-style-release'
        exclude group: 'com.cs.bd.subscribe', module: 'official-style-debug'
    })


    implementation project(":module_google")
    implementation project(":module_network")
    implementation project(":module_ad")


    kapt rootProject.ext.arouter_compiler
}
